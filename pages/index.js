import { useState } from 'react';
import Image from 'next/image';

import Head from 'next/head';
import Link from 'next/link';

import styles from '../styles/Home.module.scss';

import ProductCard from '../components/ProductCard';
import Button from '../components/Button';

import gridIcon from '../images/gridIcon.svg';
import mobileIcon from '../images/mobile-screen-button-solid.svg';
import gemIcon from '../images/gem-solid.svg';
import manIcon from '../images/person-solid.svg';
import womanIcon from '../images/person-dress-solid.svg';
import logo from '../images/nextshoppinglogo1.png';

export const categories = [
  {
    value: 'electronics',
    color: '#EC958D',
    icon: mobileIcon,
  },
  {
    value: 'jewelery',
    color: '#FFDF00',
    icon: gemIcon,
  },
  {
    value: "men's clothing",
    color: '#93CE45',
    icon: manIcon,
  },
  {
    value: "women's clothing",
    color: '#9CC4D1',
    icon: womanIcon,
  },
];

export default function Home({ allProducts }) {
  const [categoryFilter, setCategoryFilter] = useState('all');

  function capitalizeFirstLetter(string) {
    return string?.charAt(0).toUpperCase() + string?.slice(1);
  }

  const handleChange = (event) => {
    setCategoryFilter(
      event.target.value ? event.target.value : event.target.alt
    );
  };

  const findColor = () => {
    const currentCategory = categories.find((c) => c.value === categoryFilter);
    return currentCategory ? currentCategory.color : '#FFBA4B';
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Next Shopping - Leo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icons8-shopping-cart-96.png" />
      </Head>

      <main className={styles.main}>
        <div className={styles.logo_wrapper}>
          <Image
            priority
            src={logo}
            alt="logo"
            layout="fill"
            objectFit="contain"
          />
        </div>
        <section className={styles.content}>
          <nav className={styles.nav}>
            <div className={styles.nav__buttonwrapper}>
              <Button
                style={{ backgroundColor: '#FFBA4B' }}
                className={`${styles.nav__button} ${styles.nav__button_all}`}
                onClick={handleChange}
                value="all"
                icon={
                  <Image
                    src={gridIcon}
                    value="all"
                    alt="all"
                    height="20"
                    width="20"
                  />
                }
              />
              All
            </div>
            {categories.map((category, i) => (
              <div key={i} className={styles.nav__buttonwrapper}>
                <Button
                  style={{ backgroundColor: category.color }}
                  className={`${styles.nav__button}`}
                  onClick={handleChange}
                  value={category.value}
                  icon={
                    <Image
                      src={category.icon}
                      alt={category.value}
                      height="20"
                      width="20"
                    />
                  }
                />
                {capitalizeFirstLetter(category.value)}
              </div>
            ))}
          </nav>
          <div
            className={styles.heading}
            style={{ backgroundColor: findColor() }}
          >
            <h3>{capitalizeFirstLetter(categoryFilter)}</h3>
          </div>

          <div className={styles.card__wrapper}>
            {categoryFilter !== 'all'
              ? allProducts
                  .filter((product) => product.category === categoryFilter)
                  .map((product, i) => (
                    <Link key={i} href={`products/${product.id}`}>
                      <a className={styles.card__link}>
                        <ProductCard product={JSON.stringify(product)} />
                      </a>
                    </Link>
                  ))
              : allProducts.map((product, i) => (
                  <Link key={i} href={`products/${product.id}`}>
                    <a className={styles.card__link}>
                      <ProductCard
                        product={JSON.stringify(product)}
                        categories={categories}
                      />
                    </a>
                  </Link>
                ))}
          </div>
        </section>
      </main>

      <footer className={styles.footer}>
        {/* <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a> */}
      </footer>
    </div>
  );
}

export async function getStaticProps() {
  const res = await fetch('https://fakestoreapi.com/products');
  const allProducts = await res.json();

  return {
    props: { allProducts },
  };
}
